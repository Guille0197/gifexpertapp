{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YAuB3BZ,EAAYe,UAAY,CACtBd,c,OAAee,EAAUC,KAAKC,Y,2BC7BnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAYdM,GAZc,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEvC,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAEdlB,mBAAS,CACjCyB,KAAM,GACNa,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAK,SAAAC,GAEJH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGd,CAACpB,IAEGqB,EDd2BK,CAAa1B,GAAjCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEtB,OACE,oCACE,4BAAKpB,GAEJoB,GAAW,yCAEZ,yBAAKJ,UAAU,aAEXH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACEiB,IAAKjB,EAAIC,IACLD,UEhBLkB,EAAe,WAAM,MAGI9C,mBAAS,CAAC,mBAHd,mBAGzB+C,EAHyB,KAGbhD,EAHa,KAUhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEIgD,EAAWpB,KAAI,SAACT,GAAD,OACb,kBAAC,EAAD,CACE2B,IAAK3B,EACLA,SAAUA,U,MCnBxB8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.23c51639.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setinputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.protoType = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=n4iN9nDeLAVZkQs9xeLg08woP4iAjKVa`\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  // console.log(id, title, url);\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from '../components/GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      {loading && <p>loading...</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map(img => (\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(imgs => {\r\n        // console.log(imgs)\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n      });\r\n  }, [category]);\r\n\r\n  return state; // { data: [], loading: true };\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  // const categories = ['One punch', 'Samurai X', 'Dragon Ball'];\r\n  const [categories, setCategories] = useState(['Rick and Morty']);\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories(['Kimetzu No Yaiba', ...categories]);\r\n  //   setCategories(cats => [...cats, inputValue]);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map((category) => (\r\n            <GifGrid\r\n              key={category}\r\n              category={category}\r\n            />\r\n          )\r\n          )\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp'\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}